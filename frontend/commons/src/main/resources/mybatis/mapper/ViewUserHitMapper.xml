<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ml.prize.commons.mapper.ViewUserHitMapper">
  <resultMap id="BaseResultMap" type="com.ml.prize.commons.entity.ViewUserHit">
    <result column="user_hit_id" jdbcType="INTEGER" property="userHitId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="stu_no" jdbcType="VARCHAR" property="stuNo" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="game_id" jdbcType="INTEGER" property="gameId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="hit_time" jdbcType="TIMESTAMP" property="hitTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_hit_id, title, type, username, real_name, stu_no, phone, level, product_name, 
    price, game_id, user_id, product_id, hit_time
  </sql>
  <select id="selectByExample" parameterType="com.ml.prize.commons.entity.ViewUserHitExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from view_user_hit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.ml.prize.commons.entity.ViewUserHitExample">
    delete from view_user_hit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ml.prize.commons.entity.ViewUserHit">
    insert into view_user_hit (user_hit_id, title, type, 
      username, real_name, stu_no, 
      phone, level, product_name, 
      price, game_id, user_id, 
      product_id, hit_time)
    values (#{userHitId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{stuNo,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{gameId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{productId,jdbcType=INTEGER}, #{hitTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ml.prize.commons.entity.ViewUserHit">
    insert into view_user_hit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userHitId != null">
        user_hit_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="stuNo != null">
        stu_no,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="gameId != null">
        game_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="hitTime != null">
        hit_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userHitId != null">
        #{userHitId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="stuNo != null">
        #{stuNo,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="gameId != null">
        #{gameId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="hitTime != null">
        #{hitTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ml.prize.commons.entity.ViewUserHitExample" resultType="java.lang.Long">
    select count(*) from view_user_hit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update view_user_hit
    <set>
      <if test="record.userHitId != null">
        user_hit_id = #{record.userHitId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.stuNo != null">
        stu_no = #{record.stuNo,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.gameId != null">
        game_id = #{record.gameId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.hitTime != null">
        hit_time = #{record.hitTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update view_user_hit
    set user_hit_id = #{record.userHitId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      stu_no = #{record.stuNo,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      game_id = #{record.gameId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      hit_time = #{record.hitTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>